---

########################
# tasks file for desktop


- name: Garante o sistema possa usar o transporte HTTPS para o APT
  stat: path=/usr/lib/apt/methods/https
  register: apt_https_transport
  become: yes

  
- name: Instalando HTTPS transporte para APT
  apt: pkg=apt-transport-https state=installed
  when: not apt_https_transport.stat.exists

- name: habilita todos os repositorios no sources.list
  replace: dest=/etc/apt/sources.list regexp='^#\s?deb(.+)http://(.+)/ubuntu(.+)$' replace='deb\1http://\2/ubuntu\3' backup=yes

- name: Ensure that Aptitude repositories are up to date
  apt: update_cache=yes cache_valid_time={{ aptcachetime }}

- name: Instalando pacotes comuns
  apt: pkg={{ item }} state=latest update_cache=yes cache_valid_time={{ aptcachetime }}
  with_items:
    - afuse
    - aptitude
    - axel
    - build-essential
    - bzip2
    - ca-certificates
    - colortest
    - curl
    - diffutils
    - dos2unix
    - fdupes
    - ftp-ssl
    - gawk
    - gcc
    - git
    - grep
    - gzip
    - htop
    - httping
    - iftop
    - imagemagick
    - iotop
    - less
    - lftp
    - make
    - nano
    - nfs-common
    - nmap
    - openssl
    - p7zip
    - pv
    - pwgen
    - ranger
    - rar
    - rsync
    - smbclient
    - software-properties-common
    - sshfs
    - sshpass
    - tar
    - tmux
    - trash-cli
    - tig
    - unzip
    - vim
    - wget
    - whois
    - zip

- name: Atualizando pacotes j√° instalados
  apt: upgrade=yes


##############################
# tasks file for Google-Chrome

- name: Download Google-Chrome
  get_url: 
    url="{{ my_package_url }}"
    dest="/home/{{ ansible_env.USER }}/Downloads/{{ my_package_name }}.deb"

- name: Install Google-Chrome
  apt: deb="/home/{{ ansible_env.USER }}/Downloads/{{ my_package_name }}.deb"



#############################
# tasks file for java-openjdk

- name: Instalando OpenJDK
  apt: pkg={{ item }} state=latest update_cache=yes cache_valid_time={{ aptcachetime }}
  with_items:
    - default-jdk
    - default-jre-headless


###########################
# tasks file for localidade

- name: Configurando locales
  lineinfile: dest=/var/lib/locales/supported.d/local regexp="{{ item }}" line="{{ item }}" create="yes"
  notify:
    - Generate locales
  with_items:
    - "pt_BR.UTF-8 UTF-8"
    - "{{ locale }} UTF-8"

- name: Setando localtime (/etc/localtime)
  copy: remote_src=yes src=/usr/share/zoneinfo/{{ timezone }} dest=/etc/localtime

- name: Setando timezone (/etc/timezone)
  copy: content="{{ timezone }}\n" dest=/etc/timezone
  notify:
    - Update TimeZone data

- name: Instalando ntp package
  action: apt pkg=ntp state=latest update_cache=yes cache_valid_time={{ aptcachetime }}



##########################
# tasks file for notepadqq

- name: Adicionando repositorio
  apt_repository: repo="ppa:notepadqq-team/notepadqq" state=present
  

- name: Instalando Notepadqq text editor
  apt: pkg={{ item }} state=latest update_cache=yes cache_valid_time={{ aptcachetime }}
  with_items:
    - notepadqq
    - notepadqq-gtk


###########################
# tasks file for teamviewer

- name: Adicionando repositorio teamviewer
  apt_repository: repo={{ item }}
  with_items:
   - "deb http://linux.teamviewer.com/deb stable main"
   - "deb http://linux.teamviewer.com/deb preview main"

- name: Adicionando chave do repositorio
  apt_key: url=https://download.teamviewer.com/download/linux/signature/TeamViewer{{ teamviewer_version }}.asc state=present

- name: Instalando Teamviewer 
  apt: pkg={{ item }} state=latest update_cache=yes cache_valid_time={{ aptcachetime }}
  with_items:
   - teamviewer


###########################
# tasks file for virtualbox

- name: Adicionando Oracle APT key
  apt_key: url=https://www.virtualbox.org/download/oracle_vbox.asc state=present

- name: Configurando repositorios VirtualBox APT 
  apt_repository: repo="deb http://download.virtualbox.org/virtualbox/debian {{ ansible_distribution_release }} contrib" state=present

- name: Instalando VirtualBox
  apt: pkg={{ item }} state=latest update_cache=yes cache_valid_time={{ aptcachetime }}
  with_items:
   - virtualbox
   - virtualbox-ext-pack



##############################
# task file for Docker

- name: Adicionando repositorios Docker
  apt_repository: repo={{ item }}
  with_items:
    - "deb [arch=amd64] https://download.docker.com/linux/ubuntu {{ ansible_distribution_release }} stable"
    - "deb [arch=amd64] https://download.docker.com/linux/ubuntu {{ ansible_distribution_release }} edge"
    - "deb [arch=amd64] https://download.docker.com/linux/ubuntu {{ ansible_distribution_release }} nightly"

- name: Adicionando Docker GPG Key
  apt_key: url=https://download.docker.com/linux/ubuntu/gpg
  state: present

- name: Instalando Docker-ce
  apt: pkg=docker.io state=latest update_cache=yes cache_valid_time={{ aptcachetime }}



#################################
# task file for Sublime Text

- name: Adicionando Sublime GPG Key
  apt_key: url=https://download.sublimetext.com/sublimehq-pub.gpg

- name: Adicionando repositorios Sublime
  apt_repository: repo="deb https://download.sublimetext.com/ apt/stable/"

- name: Update and upgrade apt packages
  apt: upgrade=yes update_cache=yes cache_valid_time={{ aptcachetime }}

- name: Instalando Sublimetext
  apt: pkg=sublime-text state=latest




####################################
# task install Openvpn

- name: Install openVPN
  apt: name=openvpn state=present

- name: Install Openssl 
  apt: name=openssl state=present
  #when: openvpn_dns

#- name: Criando arquivos de configuracao
#  become: yes
#  template:
#    src: dell-cacert.pem.j2
#    dest: "{{ openvpn_etcdir }}/client/dell-cacert.pem"
#    owner: root
#    group: root
#    mode: 0644
#  notify: 
#    - openvpn restart


#- name: Criando arquivos de configuracao
#  template: 
#   - src: "{{item.src}}"
#   - dest: "{{item.dest}}"
#  with_items:
#   - "{ src: 'templates/dell-cacert.pem.j2', dest: '{{ openvpn_etcdir }}client/dell-cacert.pem' }"
#   - "{ src: 'templates/dell.conf.j2', dest: '{{ openvpn_etcdir }}client/dell.conf' }"
#  owner:
#   - root
#  group:
#   - root
#  mode:
#   0644
#  notify: 
#   - openvpn restart

- template:
    src: dell-cacert.pem.j2
    dest: "{{ openvpn_etcdir }}/client/dell-cacert.pem"
    owner: root
    group: root
    mode: 0644
    notify: openvpn restart
 
